export const VARIANTS = {
  CLASSIC: "Classic",
  DIAGONAL: "Diagonal",
  KILLER: "Killer",
};

// SAMPLE PUZZLES: '.' = empty
export const SAMPLE = {
  CLASSIC: [
    [
      ["5","3",".",".","7",".",".",".","."],
      ["6",".",".","1","9","5",".",".","."],
      [".","9","8",".",".",".",".","6","."],
      ["8",".",".",".","6",".",".",".","3"],
      ["4",".",".","8",".","3",".",".","1"],
      ["7",".",".",".","2",".",".",".","6"],
      [".","6",".",".",".",".","2","8","."],
      [".",".",".","4","1","9",".",".","5"],
      [".",".",".",".","8",".",".","7","9"]
    ]
  ],
  DIAGONAL: [
    // reuse classic as example (same grid but solver enforces diagonals)
    [
      ["5","3",".",".","7",".",".",".","."],
      ["6",".",".","1","9","5",".",".","."],
      [".","9","8",".",".",".",".","6","."],
      ["8",".",".",".","6",".",".",".","3"],
      ["4",".",".","8",".","3",".",".","1"],
      ["7",".",".",".","2",".",".",".","6"],
      [".","6",".",".",".",".","2","8","."],
      [".",".",".","4","1","9",".",".","5"],
      [".",".",".",".","8",".",".","7","9"]
    ]
  ],
  KILLER: [
    // minimal killer sample: puzzle grid (all empty) plus cages with sums
    {
      grid: [
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."],
        [".",".",".",".",".",".",".",".","."]
      ],
      // Example cages: list of {cells:[[r,c],...], sum: number}
      // This sample is illustrative â€” solver will work with any cage set.
      cages: [
        { cells: [[0,0],[0,1]], sum: 11 },
        { cells: [[0,2],[1,2]], sum: 5 },
        { cells: [[0,3],[0,4],[1,4]], sum: 17 },
        { cells: [[0,5],[1,5]], sum: 9 },
        { cells: [[0,6],[0,7]], sum: 7 },
        { cells: [[0,8],[1,8]], sum: 10 },
        // ... (this is a toy sample; for real puzzles use generated cages)
      ]
    }
  ]
};
